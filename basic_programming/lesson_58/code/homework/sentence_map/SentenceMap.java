package homework.sentence_map;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SentenceMap {
    //Посчитайте количество повторяющихся букв в предложении
    public static void main(String[] args) {
        String words = "В 1800-х годах, в те времена, когда не было еще ни железных, ни шоссейных дорог, ни газового, ни стеаринового света, ни пружинных низких диванов, ни мебели без лаку, ни разочарованных юношей со стеклышками, ни либеральных философов-женщин, ни милых дам-камелий, которых так много развелось в наше время, – в те наивные времена, когда из Москвы, выезжая в Петербург в повозке или карете, брали с собой целую кухню домашнего приготовления, ехали восемь суток по мягкой, пыльной или грязной дороге и верили в пожарские котлеты, в валдайские колокольчики и бублики, – когда в длинные осенние вечера нагорали сальные свечи, освещая семейные кружки из двадцати и тридцати человек, на балах в канделябры вставлялись восковые и спермацетовые свечи, когда мебель ставили симметрично, когда наши отцы были еще молоды не одним отсутствием морщин и седых волос, а стрелялись за женщин и из другого угла комнаты бросались поднимать нечаянно и не нечаянно уроненные платочки, наши матери носили коротенькие талии и огромные рукава и решали семейные дела выниманием билетиков, когда прелестные дамы-камелии прятались от дневного света, – в наивные времена масонских лож, мартинистов, тугендбунда, во времена Милорадовичей, Давыдовых, Пушкиных, – в губернском городе К. был съезд помещиков, и кончались дворянские выборы.";

        char[] characters = words.toCharArray(); //перевели строку в массив букв

        Map<Character, Integer> letterCountMap = new HashMap<>(); //определили новую мапу для подсчета частоты букв

        for (char ch : characters) { //проходимся по массиву characters который уже переведен в char
            if (Character.isLetter(ch)) { // проверяем, что это буква, а не прочий символ
                ch = Character.toLowerCase(ch); //перевели все буквы в нижний регистр
                letterCountMap.put(ch, letterCountMap.getOrDefault(ch, 0) + 1); // кладем все буквы в мапу
                // метод getOrDefault заменяет проверку на отсутствие буквы в мапе
            }
        }
        System.out.println("==============Sorted By Integer=======================");
        //создаем лист на основе Map.Entry, что бы отсортировать полученный список
        List<Map.Entry<Character, Integer>> sortedList = new ArrayList<>(letterCountMap.entrySet());
        sortedList.sort((e1, e2)-> Integer.compare(e1.getValue(), e2.getValue())); //сортируем от меньшего к большему
        sortedList.forEach(e-> System.out.println(e)); // печатаем
    }
}
