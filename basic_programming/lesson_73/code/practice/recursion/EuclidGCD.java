package practice.recursion;

//		Алгоритм Евклида — это эффективный метод для нахождения наибольшего общего делителя (НОД) двух чисел.
//		Он основан на простой идее: НОД двух чисел не изменится, если большее число заменить на разность между ним
//		и меньшим числом.

//Наибольший общий делитель (НОД) двух чисел - это наибольшее число, которое делит оба числа без остатка. НОД имеет несколько важных применений в математике и информатике:
// 1. **Упрощение дробей:** НОД числителя и знаменателя дроби позволяет сократить дробь до наименьших целых чисел. Например, для дроби 12/18 НОД(12, 18) равен 6, поэтому эту дробь можно упростить до 2/3, разделив числитель и знаменатель на 6.
//  2. **Решение уравнений и поиска делимости:** НОД используется для решения уравнений и проверки делимости. Например, если НОД(15, 25) равен 5, это означает, что 5 является наибольшим числом, которое делит оба числа без остатка.
//  3. **Алгоритмы и криптография:** НОД используется в различных алгоритмах, таких как RSA (алгоритм шифрования), где знание НОД двух чисел является важной частью процесса шифрования и дешифрования.
//  4. **Оптимизация алгоритмов:** НОД используется в оптимизации алгоритмов, например, в алгоритме Евклида для нахождения НОД, который имеет множество применений в математике и компьютерных науках.
//НОД является важным математическим понятием, которое находит свое применение во многих областях, включая арифметику, алгоритмы, криптографию и другие области науки и техники.

public class EuclidGCD {
    public static void main(String[] args) {

    int m = 123452;
    int n = 987652;

    int res = greatCommonDivision(n, m);
        System.out.println("GCD = " + res);

    }

    private static int greatCommonDivision(int n, int m) {
        // Euclid algorithm
        if(n == m) {
            return n;
        }
        if(n > m) {
            return greatCommonDivision(n-m, m);
        } else {
            // m > n
            return greatCommonDivision(n, m - n);
        }

    }

}
